from pyrogram import Client, filters
from pyrogram.errors import FloodWait
 
from pyrogram.types import ChatPermissions
 
import time
from time import sleep
import random
  
app = Client(
    "my_account",
    api_id=apiID_from_telegram,
    api_hash="ApiHash_from_telegram"
)
 
# –ö–æ–º–∞–Ω–¥–∞ type
@app.on_message(filters.command("type", prefixes=".") & filters.me)
def type(_, msg):
    orig_text = msg.text.split(".type ", maxsplit=1)[1]
    text = orig_text
    tbp = "" # to be printed
    typing_symbol = "‚ñí"
 
    while(tbp != orig_text):
        try:
            msg.edit(tbp + typing_symbol)
            sleep(0.05) # 50 ms
 
            tbp = tbp + text[0]
            text = text[1:]
 
            msg.edit(tbp)
            sleep(0.05)
 
        except FloodWait as e:
            sleep(e.x)

#–≤—ã—Ö–æ–¥
@app.on_message(filters.command("exit", prefixes=".") & filters.me)
def exit(_, msg):
    perc = 0
    
    while(perc < 100):
        try:
            text = "–í—ã—Ö–æ–¥ –∏–∑ —á–∞—Ç–∞ ..." + str(perc) + "%"
            msg.edit(text)
            
            perc += random.randint(1, 3)
            sleep(0.1)
            
        except FloodWait as e:
            sleep(e.x)
    
    msg.edit("–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç")

# –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ –¥–æ–ª–±–æ–µ–±–∞
@app.on_message(filters.command("hack", prefixes=".") & filters.me)
def hack(_, msg):
    perc = 0
 
    while(perc < 100):
        try:
            text = "üëÆ‚Äç –ü–æ–∏—Å–∫ –¥o–ª–±–æ–µ–±–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ ..." + str(perc) + "%"
            msg.edit(text)
 
            perc += random.randint(1, 3)
            sleep(0.1)
 
        except FloodWait as e:
            sleep(e.x)
 
    msg.edit("üü¢ –î–æ–ª–±–æ–µ–± –Ω–∞–π–¥–µ–Ω!!!")
    sleep(3)
 
    msg.edit("–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–æ–ª–±–æ–µ–±—Å—Ç–≤–∞ ...")
    perc = 0
 
    while(perc < 100):
        try:
            text = "–†–∞—Å—à–∏–≤—Ä–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –¥–æ–ª–±–æ–µ–±—Å—Ç–≤–∞" + str(perc) + "%"
            msg.edit(text)
 
            perc += random.randint(1, 5)
            sleep(0.15)
 
        except FloodWait as e:
            sleep(e.x)
 
    msg.edit("–£—Ä–æ–≤–µ–Ω—å –¥–æ–ª–±–æ–µ–±—Å—Ç–≤–∞ 100%")

#–∫–æ–º–∞–Ω–¥–∞ —Ç–∞–Ω–æ—Å
@app.on_message(filters.command("thanos", prefixes=".") & filters.me)
def thanos(_, msg):
    chat = msg.text.split(".thanos ", maxsplit=1)[1]
 
    members = [
        x
        for x in app.iter_chat_members(chat)
        if x.status not in ("administrator", "creator")
    ]
 
    random.shuffle(members)
 
    app.send_message(chat, "–©–µ–ª—á–æ–∫ –¢–∞–Ω–æ—Å–∞ ... *—â—ë–ª–∫*")
 
    for i in range(len(members) // 2):
        try:
            app.restrict_chat_member(
                chat_id=chat,
                user_id=members[i].user.id,
                permissions=ChatPermissions(),
                until_date=int(time.time() + 86400),
            )
            app.send_message(chat, "–ò—Å—á–µ–∑ " + members[i].user.first_name)
        except FloodWait as e:
            print("> waiting", e.x, "seconds.")
            time.sleep(e.x)
 
    app.send_message(chat, "–ù–æ –∫–∞–∫–æ–π —Ü–µ–Ω–æ–π?")
         


app.run()
